@model WebStore.Models.CustomerRegisterViewModel

<div class="register-account">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <h5 class="card-header">Register</h5>
                <div class="card-body">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstName)
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "Enter your first name" })
                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.LastName)
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Enter your last name" })
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Phone)
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = "Enter your phone number" })
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Address)
                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Enter your address" })
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Password)
                            <div class="input-group">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control password-input", placeholder = "Enter your password", id = "password-input" })
                                <div style="margin-left: 0px !important" class="input-group-append">
                                    <button type="button" class="btn btn-outline-secondary" id="toggle-password">
                                        <i class="fas fa-eye-slash"></i>
                                    </button>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.ConfirmPassword)
                            <div class="input-group">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control password-input", placeholder = "Confirm your password", id = "confirm-password-input" })
                                <div style="margin-left: 0px !important" class="input-group-append">
                                    <button type="button" class="btn btn-outline-secondary" id="toggle-confirm-password">
                                        <i class="fas fa-eye-slash"></i>
                                    </button>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <button type="submit" class="btn btn-primary btn-block">Register</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Style cho biểu tượng ẩn/hiện mật khẩu */
    .input-group-append button {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        cursor: pointer;
    }

    /* Duy trì chiều rộng cho input khi thay đổi từ password sang text */
    .password-input {
        width: calc(100% - 40px); /* 40px là chiều rộng của button toggle */
    }
</style>

<script>
    // JavaScript để toggle password visibility
    document.getElementById('toggle-password').addEventListener('click', function () {
        var passwordInput = document.getElementById('password-input');
        var icon = this.querySelector('i');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        } else {
            passwordInput.type = 'password';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        }
    });

    // JavaScript để toggle confirm password visibility
    document.getElementById('toggle-confirm-password').addEventListener('click', function () {
        var confirmPasswordInput = document.getElementById('confirm-password-input');
        var icon = this.querySelector('i');

        if (confirmPasswordInput.type === 'password') {
            confirmPasswordInput.type = 'text';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        } else {
            confirmPasswordInput.type = 'password';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        }
    });
</script>
